@model ImmoMVC.Models.Gestionnaire

@{
    ViewBag.Title = "Édition";
}

<div class="container">
    <h3 class="mb-3">Edition du gestionnaire</h3>

    @if (ViewBag.Error != null)
    {
        <p class="text-danger mb-3">@ViewBag.Error</p>
    }
</div>

@using (Html.BeginForm("Edit", "Gestionnaire", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.MotDePasse)

    <div class="form-group">
        @Html.LabelFor(model => model.Nom, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nom, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Prenom, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Prenom, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Prenom, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NumeroDeTelephone, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NumeroDeTelephone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NumeroDeTelephone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Mail, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Mail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Mail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RaisonSociale, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RaisonSociale, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RaisonSociale, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Siret, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Siret, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Siret, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Valider" class="btn btn-success" />
            <a class="btn btn-secondary" asp-action="Index">Retour</a>
        </div>
    </div>
</div>
}

@*<div class="container">
    @Html.ActionLink("Retour à la liste", "Index")
</div>*@

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
} 